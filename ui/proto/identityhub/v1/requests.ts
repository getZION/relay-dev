/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.4
 * source: proto/identityhub/v1/requests.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./messages";
import * as pb_1 from "google-protobuf";
export namespace proto.identityhub.v1 {
    export class Request extends pb_1.Message {
        constructor(data?: any[] | {
            requestId?: string;
            target?: string;
            messages?: dependency_1.proto.identityhub.v1.Message[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], []);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("requestId" in data && data.requestId != undefined) {
                    this.requestId = data.requestId;
                }
                if ("target" in data && data.target != undefined) {
                    this.target = data.target;
                }
                if ("messages" in data && data.messages != undefined) {
                    this.messages = data.messages;
                }
            }
        }
        get requestId() {
            return pb_1.Message.getField(this, 1) as string;
        }
        set requestId(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get target() {
            return pb_1.Message.getField(this, 2) as string;
        }
        set target(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get messages() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_1.proto.identityhub.v1.Message, 3) as dependency_1.proto.identityhub.v1.Message[];
        }
        set messages(value: dependency_1.proto.identityhub.v1.Message[]) {
            pb_1.Message.setRepeatedWrapperField(this, 3, value);
        }
        static fromObject(data: {
            requestId?: string;
            target?: string;
            messages?: ReturnType<typeof dependency_1.proto.identityhub.v1.Message.prototype.toObject>[];
        }) {
            const message = new Request({});
            if (data.requestId != null) {
                message.requestId = data.requestId;
            }
            if (data.target != null) {
                message.target = data.target;
            }
            if (data.messages != null) {
                message.messages = data.messages.map(item => dependency_1.proto.identityhub.v1.Message.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data: {
                requestId?: string;
                target?: string;
                messages?: ReturnType<typeof dependency_1.proto.identityhub.v1.Message.prototype.toObject>[];
            } = {};
            if (this.requestId != null) {
                data.requestId = this.requestId;
            }
            if (this.target != null) {
                data.target = this.target;
            }
            if (this.messages != null) {
                data.messages = this.messages.map((item: dependency_1.proto.identityhub.v1.Message) => item.toObject());
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (typeof this.requestId === "string" && this.requestId.length)
                writer.writeString(1, this.requestId);
            if (typeof this.target === "string" && this.target.length)
                writer.writeString(2, this.target);
            if (this.messages !== undefined)
                writer.writeRepeatedMessage(3, this.messages, (item: dependency_1.proto.identityhub.v1.Message) => item.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Request {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Request();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.requestId = reader.readString();
                        break;
                    case 2:
                        message.target = reader.readString();
                        break;
                    case 3:
                        reader.readMessage(message.messages, () => pb_1.Message.addToRepeatedWrapperField(message, 3, dependency_1.proto.identityhub.v1.Message.deserialize(reader), dependency_1.proto.identityhub.v1.Message));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Request {
            return Request.deserialize(bytes);
        }
    }
}
