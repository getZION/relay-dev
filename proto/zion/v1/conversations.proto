syntax = "proto3";

package proto.zion.v1;

option go_package = "github.com/getzion/relay/gen/zion/v1";

import "proto/protoc-gen-gorm/options/gorm.proto";
import "proto/zion/v1/messages.proto";
import "proto/zion/v1/comments.proto";

message Conversation {
  option (gorm.opts).ormable = true;
  // The community's unique ID (primary key)
  int64 id = 1 [(gorm.field).tag = {
    unique: true
    primary_key: true
  }];
  // Conversation ID unique across Zion - Required; must be uuid v4
  string zid = 2 [(gorm.field).tag = { unique: true }];
  // Main message body - Optional if link is non-null, otherwise required
  string text = 3;
  // URL link to external piece of content - Optional if text is non-null, otherwise required
  string link = 4;
  // URL for associated image - Optional
  string img = 5;
  // URL for associated video - Optional
  string video = 6;
  // Is this conversation publicly visible? - Optional; defaults to false
  bool public = 7;
  // Price in sats for non-community members to read, if public = true - Optional; defaults to 0
  int64 public_price = 8;
  // Deleted - Optional, defaults 0
  bool deleted = 9;
  // Created when? - Required
  int64 created = 10;
  // Updated when? - Optional
  int64 updated = 11;
  
  repeated Comment comments = 12 [(gorm.field).many_to_many = {
    jointable: "conversation_comments",
    foreignkey: "zid",
    association_foreignkey: "zid",
    jointable_foreignkey: "ConversationZid",
    association_jointable_foreignkey: "CommentZid"
  }];
}
